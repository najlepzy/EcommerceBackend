openapi: 3.0.1
info:
  title: "API Coder Backend - Products"
  version: "1.0.0"
  description: "API Documentation for Product Management"
tags:
  - name: products
    description: "Operations related to product management"

paths:
  /api/products:
    get:
      tags:
        - products
      summary: "Get all products"
      description: "Retrieve a paginated list of all products. Supports filtering by category and sorting by price."
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Products retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: "Gibson Les Paul Guitar"
                        description:
                          type: string
                          example: "Classic electric guitar..."
                        code:
                          type: string
                          example: "GBS001"
                        price:
                          type: number
                          example: 3821037
                        status:
                          type: boolean
                          example: true
                        stock:
                          type: integer
                          example: 39
                        category:
                          type: string
                          example: "Guitars"
                        thumbnails:
                          type: array
                          items:
                            type: string
                            example: "https://example.com/image.webp"
                  hasPrevPage:
                    type: boolean
                    example: false
                  hasNextPage:
                    type: boolean
                    example: true
                  prevLink:
                    type: string
                    nullable: true
                    example: null
                  nextLink:
                    type: string
                    nullable: true
                    example: "http://localhost:8080/api/products?page=2"
        "500":
          description: "Internal server error"

    post:
      tags:
        - products
      summary: "Add a new product"
      description: "Create a new product. Admin or subAdmin role required."
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "New Awesome Guitar"
                description:
                  type: string
                  example: "A high quality guitar..."
                code:
                  type: string
                  example: "NAW001"
                price:
                  type: number
                  example: 2500
                stock:
                  type: integer
                  example: 15
                category:
                  type: string
                  example: "Guitars"
                thumbnails:
                  type: array
                  items:
                    type: string
                    example: "https://example.com/thumb.jpg"
              required:
                - title
                - description
                - code
                - price
                - stock
                - category
      responses:
        "201":
          description: "Product created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  code:
                    type: string
                  price:
                    type: number
                  status:
                    type: boolean
                  stock:
                    type: integer
                  category:
                    type: string
                  thumbnails:
                    type: array
                    items:
                      type: string
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized (no token or invalid token)"
        "403":
          description: "Forbidden (user does not have 'admin' or 'subAdmin' role)"
        "500":
          description: "Internal server error"

  /api/products/{pid}:
    get:
      tags:
        - products
      summary: "Get product by ID"
      description: "Retrieve a product by its unique ID."
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Product found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  title:
                    type: string
                    example: "Gibson Les Paul Guitar"
                  description:
                    type: string
                    example: "Classic electric guitar..."
                  code:
                    type: string
                    example: "GBS001"
                  price:
                    type: number
                    example: 3821037
                  status:
                    type: boolean
                    example: true
                  stock:
                    type: integer
                    example: 39
                  category:
                    type: string
                    example: "Guitars"
                  thumbnails:
                    type: array
                    items:
                      type: string
                      example: "https://example.com/image.webp"
        "400":
          description: "Invalid ID format"
        "404":
          description: "Product not found"
        "500":
          description: "Internal server error"

    put:
      tags:
        - products
      summary: "Update product by ID"
      description: "Update an existing product. Admin or subAdmin role required."
      security:
        - jwt: []
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated Product Title"
                description:
                  type: string
                  example: "Updated product description..."
                code:
                  type: string
                  example: "UPD001"
                price:
                  type: number
                  example: 3000
                stock:
                  type: integer
                  example: 20
                category:
                  type: string
                  example: "UpdatedCategory"
                thumbnails:
                  type: array
                  items:
                    type: string
                    example: "https://example.com/newimage.jpg"
      responses:
        "200":
          description: "Product updated successfully"
        "400":
          description: "Invalid input or ID format"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden (user does not have 'admin' or 'subAdmin' role)"
        "404":
          description: "Product not found"
        "500":
          description: "Internal server error"

    delete:
      tags:
        - products
      summary: "Delete product by ID"
      description: "Delete an existing product. Admin or subAdmin role required."
      security:
        - jwt: []
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Product deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted successfully"
        "401":
          description: "Unauthorized (invalid or no token provided)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "403":
          description: "Forbidden (role not allowed)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Access denied"
        "404":
          description: "Product not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
